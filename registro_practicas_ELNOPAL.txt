REGISTRO DE PRÁCTICAS - DESARROLLO APLICACIÓN ELNOPAL
=======================================================

SEMANA 1
---------

LUNES
-----
• Reunión inicial con el equipo para conocer el proyecto ELNOPAL y sus objetivos.
• Configuración del entorno de desarrollo (instalación de Node.js, React, MongoDB).
• Análisis inicial de los requisitos del sistema para el restaurante mexicano.
• Revisión de la documentación existente sobre la arquitectura cliente-servidor.
• Estudio del diseño de la base de datos MongoDB para entender la estructura de datos.
• Clonación del repositorio del proyecto y primera ejecución local.
• Familiarización con la estructura del código frontend (React) y backend (Node.js/Express).

MARTES
------
• Análisis detallado del módulo de gestión de reservas del restaurante.
• Implementación inicial de la interfaz de usuario para la página de reservas.
• Diseño de componentes React para el formulario de reserva.
• Estudio de la API REST existente para entender los endpoints disponibles.
• Configuración del proxy para la comunicación entre frontend (puerto 3000) y backend (puerto 5000).
• Primeras pruebas de conexión entre cliente y servidor.
• Documentación de la estructura de componentes implementados.

MIÉRCOLES
---------
• Desarrollo del sistema de autenticación de usuarios (login/registro).
• Implementación de validaciones en formularios de registro de clientes.
• Configuración del manejo de tokens JWT para mantener sesiones de usuario.
• Creación de rutas protegidas para acceso a funcionalidades según rol de usuario.
• Pruebas de flujo completo de registro y login.
• Solución de problemas con el almacenamiento de información en localStorage.
• Optimización de la experiencia de usuario en dispositivos móviles.

JUEVES
------
• Desarrollo del módulo de visualización del menú de comida mexicana.
• Implementación de componentes para mostrar categorías (entradas, platos principales, postres, bebidas).
• Creación de tarjetas de producto con imagen, descripción y precio.
• Integración con el backend para obtener datos dinámicos del menú.
• Implementación de filtros para búsqueda de platillos.
• Ajustes de diseño para mantener la estética mexicana definida.
• Pruebas de rendimiento con carga de múltiples imágenes.

VIERNES
-------
• Desarrollo del carrito de compra para pedidos online.
• Implementación de la lógica para agregar/eliminar productos del carrito.
• Cálculo automático de subtotales, impuestos y total.
• Integración con el backend para procesar pedidos.
• Detección y solución de un error en la comunicación con MongoDB Atlas.
• Presentación del progreso semanal al equipo supervisor.
• Planificación de tareas para la siguiente semana.

SEMANA 2
---------

LUNES
-----
• Implementación del sistema de gestión de mesas para el restaurante.
• Desarrollo de una vista administrativa para visualizar la distribución de mesas.
• Creación de la lógica para asignar estados a las mesas (libre, ocupada, reservada).
• Desarrollo de la funcionalidad para asignar camareros a zonas específicas.
• Integración con el calendario de reservas.
• Solución de problemas con la sincronización de estados.
• Pruebas con casos de uso reales proporcionados por el cliente.

MARTES
------
• Desarrollo del panel de administración para gestión de personal.
• Implementación de CRUD completo para empleados (camareros, cocineros, administradores).
• Asignación de permisos según roles de usuario.
• Desarrollo de formularios para configuración de horarios de trabajo.
• Implementación de validaciones para evitar conflictos de horarios.
• Corrección de errores detectados en la autenticación de usuarios administrativos.
• Optimización de consultas a la base de datos para mejorar rendimiento.

MIÉRCOLES
---------
• Desarrollo del sistema de notificaciones internas.
• Implementación de alertas en tiempo real para nuevos pedidos en cocina.
• Creación de un centro de notificaciones para usuarios.
• Integración con socket.io para comunicación en tiempo real.
• Resolución de problemas de conexión entre frontend y backend.
• Configuración de MongoDB Atlas para permitir acceso desde diferentes IPs.
• Pruebas de rendimiento con múltiples conexiones simultáneas.

JUEVES
------
• Desarrollo del módulo de fidelización de clientes.
• Implementación del sistema de puntos por consumo.
• Creación de catálogo de recompensas canjeables.
• Desarrollo de la lógica para cálculo automático de puntos según consumo.
• Historial de transacciones de puntos.
• Integración con el sistema de pedidos existente.
• Solución de problemas con actualización de saldos en tiempo real.

VIERNES
-------
• Implementación del sistema de análisis y reportes.
• Desarrollo de gráficos para visualización de ventas por período.
• Creación de reportes de platos más populares.
• Análisis de horas pico para optimización de personal.
• Implementación de exportación de datos a PDF y Excel.
• Realización de pruebas con datos históricos.
• Presentación de avances de la segunda semana al supervisor.

SEMANA 3
---------

LUNES
-----
• Desarrollo de la funcionalidad de pedidos a domicilio.
• Implementación de selección de dirección de entrega con integración de mapas.
• Cálculo de costos de envío según distancia.
• Estimación de tiempos de entrega.
• Seguimiento de estado del pedido (preparación, en camino, entregado).
• Solución de problemas con la API de geolocalización.
• Pruebas con diferentes direcciones y distancias.

MARTES
------
• Implementación del sistema de pagos online.
• Integración con pasarela de pagos (simulada para desarrollo).
• Manejo seguro de información de tarjetas.
• Desarrollo de flujo completo de pago.
• Generación de comprobantes de pago.
• Resolución de problemas de seguridad en la transmisión de datos sensibles.
• Pruebas extensivas del flujo de pago completo.

MIÉRCOLES
---------
• Desarrollo del módulo de gestión de inventario.
• Implementación de CRUD para productos e ingredientes.
• Sistema de alertas para stock bajo.
• Actualización automática de inventario al procesar pedidos.
• Integración con el módulo de cocina para consumo de ingredientes.
• Corrección de errores en la sincronización de datos.
• Optimización del rendimiento en consultas complejas.

JUEVES
------
• Mejora general de la interfaz de usuario.
• Implementación de tema oscuro/claro.
• Optimización para diferentes tamaños de pantalla.
• Mejora de accesibilidad según estándares WCAG.
• Corrección de problemas de rendimiento detectados.
• Depuración de errores reportados durante las pruebas.
• Documentación completa de todas las funcionalidades implementadas.

VIERNES
-------
• Testing global de la aplicación y corrección de errores finales.
• Preparación de la aplicación para entorno de producción.
• Optimización final de rendimiento.
• Preparación de documentación detallada para entrega.
• Creación de manual de usuario para diferentes roles.
• Presentación final del proyecto al equipo supervisor.
• Evaluación del proceso y retroalimentación sobre el trabajo realizado. 